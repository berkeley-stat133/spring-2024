[
  {
    "objectID": "ed-netiquette.html",
    "href": "ed-netiquette.html",
    "title": "Ed-Discussion Netiquette",
    "section": "",
    "text": "Unfortunately, we just don’t have enough human resources to have a dedicated Ed-Discussion moderator. We will do our best to monitor this tool once per day from Monday to Friday. Please note that we may not be able to monitor Ed during the evening nor weekend. That’s why we strongly encourage student participation on Ed-Discussion rather than answering right away (i.e. we want other students step up and answer questions).\nIn the past, some students have decided to use external discussion forums. When used responsibly and appropriately, we think that’s a great idea. But we have never endorsed their use, nor we have monitored, moderated or managed them, and we won’t do that this time.\nIn order to make Ed-Discussion a better resource for everyone, we’ve outlined some guidelines for you to follow when posting on this tool. Questions which follow these guidelines tend to have a higher chance of being answered!\n\nPlease adhere to the same standards of behavior online that you follow in real life\nWe want to make sure that you are helping each other out, and having instructors give away the answers isn’t the most beneficial for your education either."
  },
  {
    "objectID": "ed-netiquette.html#keep-in-mind-common-rules-of-netiquette",
    "href": "ed-netiquette.html#keep-in-mind-common-rules-of-netiquette",
    "title": "Ed-Discussion Netiquette",
    "section": "Keep in mind common rules of netiquette",
    "text": "Keep in mind common rules of netiquette\n\nDon’t post irrelevant links, comments, thoughts or pictures.\nDon’t type in ALL CAPS! If you do it will look like you are screaming.\nDon’t write anything that sounds angry or sarcastic even as a joke, because without hearing your tone of voice, your peers might not realize you’re joking.\nAlways remember to say “please” and “thank you” when soliciting help from your classmates.\nRespect the opinion of your classmates. If you feel the need to disagree, do so respectfully and acknowledge the valid points in your classmate’s argument.\nRefrain from personal abuse. Don’t badmouth others or call them offensive words. You may express robust disagreement with what someone says, but don’t call them names.\nBe forgiving. If your classmate makes a mistake, don’t badger him or her for it. Just let it go.\nIf you reply to a question from a classmate, make sure your answer is accurate.\nBe brief. If you write a long dissertation in response to a simple question, it’s unlikely that anyone will spend the time to read through it all.\nRemember that your public posts are not anonymous. They can be read by your classmates.\nDon’t expect other people to do your homework for you. If you’re looking for technical help, for example, don’t ask questions you could easily answer yourself by reading the manual or help documentation provided with the software tools used in this course."
  },
  {
    "objectID": "ed-netiquette.html#ask-lab-and-hw-questions-only-in-the-designated-lab-and-hw-posts",
    "href": "ed-netiquette.html#ask-lab-and-hw-questions-only-in-the-designated-lab-and-hw-posts",
    "title": "Ed-Discussion Netiquette",
    "section": "Ask Lab and HW questions only in the designated Lab and HW posts",
    "text": "Ask Lab and HW questions only in the designated Lab and HW posts\nWe’ve created individual posts for each type of assignment. Please ask questions, discuss problems, or help out in those posts only. Before asking a question, read through (or search) the whole thread to see if your question has been answered. Likewise, stay on topic."
  },
  {
    "objectID": "ed-netiquette.html#do-not-post-answers-in-discussion-forums",
    "href": "ed-netiquette.html#do-not-post-answers-in-discussion-forums",
    "title": "Ed-Discussion Netiquette",
    "section": "Do NOT post answers in discussion forums",
    "text": "Do NOT post answers in discussion forums\nPlease don’t give away the answer on any discussion forum. You can explain things in a way that still lets other students figure out the essence of the problem on their own, but don’t spoil the problem. For example, don’t point to a useful stackoverflow or YouTube link that works out essentially what the problem is asking about.\nThat is not cool.\nPost such spoilers after the HW is due. That is totally fine. If you are not sure, post privately to instructors and then we’ll let you know."
  },
  {
    "objectID": "ed-netiquette.html#ask-questions-about-assignments-only",
    "href": "ed-netiquette.html#ask-questions-about-assignments-only",
    "title": "Ed-Discussion Netiquette",
    "section": "Ask questions about assignments only",
    "text": "Ask questions about assignments only\nIf you have questions, comments, or other concerns that are not related to assignments, please email your GSI or the instructor. We want to keep the focus of bCourses tools for assignments in Stat 133."
  },
  {
    "objectID": "ed-netiquette.html#try-to-make-posts-public",
    "href": "ed-netiquette.html#try-to-make-posts-public",
    "title": "Ed-Discussion Netiquette",
    "section": "Try to make posts public",
    "text": "Try to make posts public\nWhile not violating the preceding rules, try to make your questions public, because others might have the same question and we don’t need to answer them multiple times."
  },
  {
    "objectID": "ed-netiquette.html#minute-test",
    "href": "ed-netiquette.html#minute-test",
    "title": "Ed-Discussion Netiquette",
    "section": "3 minute-test",
    "text": "3 minute-test\nIf you think your questions may take more than 3 or 5 minutes to answer, please come to office hours, or try to schedule a zoom meeting with the teaching staff."
  },
  {
    "objectID": "ed-netiquette.html#we-are-not-pre-grading",
    "href": "ed-netiquette.html#we-are-not-pre-grading",
    "title": "Ed-Discussion Netiquette",
    "section": "We are not pre-grading",
    "text": "We are not pre-grading\nPlease do not post questions of the form:\n\n“Is this the correct solution to HW X problem Y?”\n“Would this receive full credit on HW X problem Y?”\n“Is this the right level of detail for HW X problem Y?”\n\nPlease do not ask instructors to check your homework in advance. We simply cannot check every student’s homework.\nFeel free to ask questions of clarification about a certain HW problem, or ask questions about the course content to achieve a deeper understanding, but at a certain point, you must apply your knowledge, give it your best shot, and submit your answers with confidence."
  },
  {
    "objectID": "ed-netiquette.html#post-a-screenshot-of-any-resource-referenced",
    "href": "ed-netiquette.html#post-a-screenshot-of-any-resource-referenced",
    "title": "Ed-Discussion Netiquette",
    "section": "Post a screenshot of any resource referenced",
    "text": "Post a screenshot of any resource referenced\nYour question should be self-contained. The GSIs (and other responders) should not have to scan through PDFs or scripts to even figure out what the question is. Ask yourself: am I referring to some lecture /HW solution/discussion solution/etc?\nIf the answer is yes, post a screenshot of the relevant part. This can include your handwritten notes from the relevant lecture."
  },
  {
    "objectID": "ed-netiquette.html#post-all-your-work",
    "href": "ed-netiquette.html#post-all-your-work",
    "title": "Ed-Discussion Netiquette",
    "section": "Post all your work",
    "text": "Post all your work\nDon’t post one line saying:\n\n“At step n, I get XYZ, and I’m now confused.”\nThis forces the GSIs to guess:\nWhat happened in steps 1, 2, …, n - 1?\n\nMost likely, the GSIs will guess wrong, and we run into a mess of followup questions trying to figure out what steps 1, 2, …, n - 1 were.\nInstead, post:\n\nStarting out, we have: ….\nThen, I do …, and I get …\nNext, I do …, and I get …\nNext, I do …, and I get …\nNow, I get $&%&#(, and this makes no sense.\nThen, the GSI can respond:\nThe mistake is at step 3, you’re not allowed to apply ABC to XYZ because …\n\nIn summary, when you do ask for help, include details of what attempts you’ve made to solve the problem. It will save time and also show people that you are making an effort to help yourself.\n\nWe reserve the right to delete any posts\nWe reserve the right to delete, move, or edit any posts, and even to make Ed-Discussion inactive, at any time, without previous notice.\nDiscussion resources can be a great tools if used appropriately, respectfully, and wisely. Take advantage of Ed, and make the most out of it."
  },
  {
    "objectID": "email.html",
    "href": "email.html",
    "title": "Communication via Email",
    "section": "",
    "text": "Email: gastonsanchez@berkeley.edu\nYou should limit your emails to serious problems that cannot be addressed during office hours. The vast majority of questions can be answered during OH. Email should not be used for information that is readily available in course materials (syllabus, discussion forum, announcements, etc.) or from fellow students.\nI do not explain course material over email and will not respond to emails with such requests. Please use office hours, or discussion section, (or schedule another time to meet with the teaching staff if you have irreconcilable conflicts with the office hours)."
  },
  {
    "objectID": "email.html#reading-and-responding-email",
    "href": "email.html#reading-and-responding-email",
    "title": "Communication via Email",
    "section": "Reading and responding email",
    "text": "Reading and responding email\nFor general emails, I will reply to general questions or concerns within 2 to 3 business days, Monday through Friday, during regular academic hours (9:00AM-5:00PM).\nPlease note that I do not read email between 5pm and 9am, or during the weekends. Likewise, I do not responded to emails on the weekend.\nex. If you send an email at 6pm on Friday night, you can expect that I will read it around 9am on Monday morning, and should likely receive a response by around 9am on Tuesday morning.\nIf, for any reason, I haven’t responded to your email after four business days, please email me again. I am human, and there are times when student emails fall through the cracks inadvertently.\nI prefer to have conversations in person rather than via email, thus allowing us to get to know each other better and fostering a more collegial learning atmosphere."
  },
  {
    "objectID": "email.html#communicate-in-a-professional-manner",
    "href": "email.html#communicate-in-a-professional-manner",
    "title": "Communication via Email",
    "section": "Communicate in a professional manner",
    "text": "Communicate in a professional manner\nIf you believe your situation warrants an email, please feel free to send me a professional email. E-mail communication should be courteous and respectful in manner and tone. Please do not send e-mails that are curt or demanding.\nHere’s a short example of an unprofessional email. Let’s assume you missed an exam, for whatever reason. Do not write and say: “I missed an exam. When can I make it up?” Instead, explain why you have extenuating circumstances, and ask the teaching staff if they will allow you to make up the exam. Most likely you won’t be able to make it up, but at least you are asking in a professional way.\nIf you are unsure of how to write an email to me or any other professor, please consult this amusing blog post that gives you a useful template:\nhttps://medium.com/@lportwoodstacer/how-to-email-your-professor-without-being-annoying-af-cf64ae0e4087"
  },
  {
    "objectID": "email.html#subject-line",
    "href": "email.html#subject-line",
    "title": "Communication via Email",
    "section": "Subject line",
    "text": "Subject line\nIf you wish for your email to make it into my inbox, do not leave the subject line blank. Instead, make sure the subject of your email contains the code course and a brief explanation of the nature of the email. For example: “Stat 133-Question about Homework” or “Stat 133-Request for Meeting”."
  },
  {
    "objectID": "email.html#avoid-these-subjects",
    "href": "email.html#avoid-these-subjects",
    "title": "Communication via Email",
    "section": "Avoid these subjects",
    "text": "Avoid these subjects\n\nAvoid emailing me to explain why you missed or will miss class. I usually don’t need to know. If you think this is affecting your performance, then schedule a meeting with me.\nDo not email me to let me know you made a mistake in your submitted assignment. Please refer to the HW policies (see syllabus).\nDo not email me to ask for extra credit. Here’s why: https://marktomforde.com/academic/undergraduates/NoExtraCredit.html\nAbove all, do not email me to engage in grade grubbing. Here’s why: https://marktomforde.com/academic/undergraduates/GradeGrubbing.html"
  },
  {
    "objectID": "email.html#scheduling-a-meeting",
    "href": "email.html#scheduling-a-meeting",
    "title": "Communication via Email",
    "section": "Scheduling a meeting",
    "text": "Scheduling a meeting\nIf you wish to schedule a meeting with me, your message should include at least two times when you would like to meet and a brief (one-two sentence) description of the reason for the meeting."
  },
  {
    "objectID": "email.html#emails-regarding-letters-of-recommendation",
    "href": "email.html#emails-regarding-letters-of-recommendation",
    "title": "Communication via Email",
    "section": "Emails regarding letters of recommendation",
    "text": "Emails regarding letters of recommendation\nBefore you ask me to write you a letter of recommendation, please take a look at the following document: https://github.com/gastonstat/letter-of-rec"
  },
  {
    "objectID": "faqs.html",
    "href": "faqs.html",
    "title": "Some Frequently Asked Questions",
    "section": "",
    "text": "Will there be live webcast or recordings of lectures?  No, there will be no live webcast or recordings of lectures.\n\nDo you have a Covid (or other illness) policy?  Maintaining your health and that of the Berkeley community is of primary importance to course staff, so if you are feeling ill or have been exposed to illness, please do not come to class. All of the materials used in class will be posted either in this website or in bCourses. Likewise, you’re encouraged to reach out to fellow students to discuss the class materials or stop by office hours to chat with the GSI, the tutor, or the instructor.\nHaving said that, we expect you to attend lecture and lab. Past experience tells us that students who constantly miss lecture/lab tend to have a mediocre performance.\nAlso, missing lecture/lab does not give you the right to use OH as a replacement for receiving instruction. We are always willing to help you understand the learning materials during OH, but this also requires that you make an honest effort reviewing them before coming to OH.\n\nI am a concurrent student. What are my chances of enrolling in the class?  Depending on the size of the waitlist, and the available space in the labs, you may or may not have a chance to join the class. For example, there have been semesters in which only 10% of concurrent applications have been accepted. Likewise, there have been semesters in which 100% of concurrent applications have been accepted.\nKeep in mind that the approval process for concurrent enrollment students takes place between the 2nd and 3rd week of instruction, and it is a somewhat slow 2-step process, which takes some days, and it involves not only my intervention but also the participation of one of the advisors in the Dept. of Statistics.\n\nI am a grad student officially enrolled. Do you have a grading structure for grad students?  This semester we don’t have a special grading structure for graduate students. All students will be evaluated with the same criteria. See the course syllabus for more information about the grading structure.\n\nI would like to switch lab sections with other student. Is this possible?  This is not possible. You should attend the lab section you are officially enrolled in.\n\nIs this course a good fit if I don’t have any programming experience?  Quick answer: yes. Because Stat 133 has no prerequisites, we actually expect that many of you come without any coding experience. It is nice to have some programming experience under your belt, which makes the learning curve less steep. Having said that, if this is your first time coding, you should expect to spend a great amount of time doing work outside class (and also deal with the inevitable frustration that comes when learning any language).\n\nIs this course a good fit if I don’t have any data analysis experience?  Yes. Because Stat 133 has no prerequisites, we actually expect that most of you come without any data analysis experience. In this course you will be working with a variety of fairly simple real data sets, as well as with simulated data.\n\nIs this course a good fit if I’ve already taken several programming courses?  You may find some parts of this course somewhat slow (and boring?) in terms of basics concepts such as data types, data structures, conditionals, loops, and functions. Unless Stat 133 is a required course for your major/minor (or you are eager to learn about R), please consider taking more advanced courses if what you are interested in is algorithms, computational statistics, databases, machine learning and statistical learning.\n\nIs this course a good fit if I don’t intend to major in Statistics?  Stat 133 is one of the core courses of the Statistics Major. The way I’ve been teaching this course is having Statistics majors as my target audience. However, much of the content should be helpful for any student who has to analyze data, or for those majors with some sort of data-analysis concentration.\n\nWhat if I want to declare Statistics as my major, but I already have taken other programming courses on Campus?  You may need to talk to a student advisor for more information about this. In 2019, students that took Data 100 (e.g. C100) “Principles & Techniques of Data Science”, were able to waive Stat 133 by just taking Stat 33B “Introduction to Advanced Programming in R”. Please contact your advisor to know if this option is still available.\n\nIs this course a good fit to become a data scientist?  Becoming a data scientist is not a (one-semester) sprint. It is a (years-long) marathon. Like any other profession, it takes many years of learning, practice, practice, practice, and then some practice, to become a proficient data scientist/analyst. This course can be very useful, and we are confident it will help you to build a good foundation in your DS career.\n\nWhat if I don’t want to be a data scientist?  That’s perfect too. You don’t need to be a data scientist aspirant to take this course. Whether your plans are to become a consultant, life scientist, social scientist, journalist, or get some analytic skills, this course should be a good choice.\n\nWhy is R (and not python) the main computational tool used in Stat 133?  Historically, Stat 133 has always been taught with R, and this semester is no exception. Personally, I believe that both R and python are great tools, and it is a good idea that you learn both of them (especially if you are interested in Data Science, analytics, etc). Stat 133 gives you the opportunity to learn a fair amount of R. Quoting Hadley Wickham:\n\n“Generally, there are a lot of people who talk about R versus Python like it’s a war that either R or Python is going to win. I think that is not helpful because it is not actually a battle. These things exist independently and are both awesome in different ways”.\n\nOn a side note, Ross Ihaka, one of the creators of R, obtained his PhD at UC Berkeley (in the Dept. of Statistics), so it is no coincidence that we are heavily influenced by R.\n\nAre we going to learn about machine learning methods?  The Statistics department offers a dedicated course on this topic: Stat 154: Modern Statistical Prediction and Machine Learning. There is also CS 189: Introduction to Machine Learning offered through Electrical Engineering and Computer Sciences (EECS). Similarly, Data 100: Principles and Techniques of Data Science covers several machine learning concepts.\n\nAre we going to learn about databases?  If you are interested in Databases you should consider CS 186: Introduction to Database Systems offered through Electrical Engineering and Computer Sciences (EECS).\n\nAre we going to learn about linear models?  The Statistics department offers a dedicated course on this topic: STAT 151A: Linear Modeling, Theory and Applications.\n\nAre we going to learn about introductory statistics and/or probability?  The Statistics department offers two core courses on these topics: STAT 134: Concepts of Probability, and STAT 135: Concepts of Statistics.\n\nAre we going to learn about Reproducible Research (RR)?  We are just going to scratch the surface. We will touch on dynamic documents, and some practices and tools that are useful in RR.\n\nCan we work in groups?  Yes, absolutely. We strongly encourage you to not work alone. Well, let me rephrase that. You should try to first work on your own (trial and error). Take notes of the things you don’t understand. Then get with other people and discuss ideas, share tips (but not the entire solution).\n\nAren’t you suppose to teach us?  Yes. But you don’t learn programming by watching someone else program. The same way that you don’t learn to swim by simply watching someone else swimming. You have to get into the pool, and do all the drills your instructor says. This is a very hands-on course, and you will be required to do a great amount of work on your own.\n\nWhat if I don’t agree with all the course policies?  If there is one or more policies you don’t agree with, then please reconsider your enrollment in the course. I am assuming that all students completely agree with the course policies described in the Syllabus.\n\nCan I ask you to write me a Letter of Recommendation (LoR)?  Please take a look at this document before asking me to write you a letter of recommendation: https://github.com/gastonstat/letter-of-rec.\n\nI invited you to join my network in LinkedIn. Why haven’t you accepted my invitation?  First: Don’t take it personal. It’s not you, it’s me. Second: if you really want that I become part of your network, why don’t you talk to me in person? We can meet in OH, or you can also schedule a meeting at a different time. Let me know you better than just as a distant contact in a social media networking site.\n\nDo you have research projects open to undergrad students?  Lecturing takes most of my time and I don’t have a lab. Sometimes, however, I may look for collaborators to create some data-based project. This typically happens in the Summer."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Statistics 133: Concepts in Computing with Data",
    "section": "",
    "text": "bCourses\n  Ed\n  R-DataHub\n\nNo matching items"
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Statistics 133: Concepts in Computing with Data",
    "section": "Welcome",
    "text": "Welcome\n\nSyllabus\nCommunication via email\nEd Netiquette\nQ&As\n5 things you need to know"
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "Statistics 133: Concepts in Computing with Data",
    "section": "Schedule",
    "text": "Schedule\n\n\n   Week 4\n   \n   \n   \n   \n           \n           About:\n           Overview  Unit 4: Simple Functions and Conditionals\n                \n           \n           \n           Feb 05:\n           Lecture  Intro to Functions\n                Demo\n           \n           \n           Feb 07:\n           Lecture  If-else statements\n                \n           \n           \n           Feb 08:\n           Lab  Lab 4: Functions and Conditionals\n                \n           \n           \n           Feb 09:\n           Shiny  Shiny Friday (TBA)\n                \n           \n           \n           Homework  HW 3: TBA\n                \n           \n   \n   \n   Week 3\n   \n   \n   \n   \n           \n           About:\n           Overview  Unit 3: R Matrices and Lists\n                \n           \n           \n           Jan 29:\n           Lecture  Matrices\n                Demo\n           \n           \n           Jan 31:\n           Lecture  Lists\n                Demo\n           \n           \n           Feb 01:\n           Lab  Lab 3: Lists and Matrices\n                \n           \n           \n           Feb 02:\n           Shiny  Shiny Friday: Future Value\n                Demo\n           \n           \n           Homework  HW 2: Lists and Matrices\n                \n           \n   \n   \n   Week 2\n   \n   \n   \n   \n           \n           About:\n           Overview  Unit 2: R Vectors\n                \n           \n           \n           Jan 22:\n           Lecture  Vectors (part 1)\n                Demo\n           \n           \n           Jan 24:\n           Lecture  Vectors (part 2)\n                Demo\n           \n           \n           Jan 25:\n           Lab  Lab 2: Vectors\n                \n           \n           \n           Jan 26:\n           Shiny  Shiny Friday: Old Faithful (default app)\n                \n           \n           \n           Homework  HW 1: Vectors\n                \n           \n   \n   \n   Week 1\n   \n   \n   \n   \n           \n           About:\n           Overview  Unit 1: Introduction\n                \n           \n           \n           Jan 17:\n           Lecture  Welcome to Stat 133\n                \n           \n           \n           Jan 18:\n           Lab  Lab 1: Intro to R, RStudio, and Quarto notebooks\n                \n           \n           \n           Jan 19:\n           Lecture  R Housekeeping\n                \n           \n   \n   \n\nNo matching items"
  },
  {
    "objectID": "units/macros.html",
    "href": "units/macros.html",
    "title": "",
    "section": "",
    "text": "\\[\n\\newcommand{\\trans}{^\\mathsf{T}}\n\\newcommand{\\eps}{\\epsilon}\n\\]"
  },
  {
    "objectID": "units/unit8.html",
    "href": "units/unit8.html",
    "title": "Unit 8: Regular Expressions",
    "section": "",
    "text": "Why should you learn about character string manipulation and working with text data? Well, because a considerable amount of information and data is precisely in the form of text. And sooner or later (I would say sooner than later) you will have to deal with some kind of string manipulation for your data analysis. So it’s better to be prepared for such tasks and know how to perform them inside the R environment.\nTo unleash the power of string manipulation, we need to take things to the next level and learn about Regular Expressions or regex for short. Namely, regex allows us to describe a certain amount of text called “patterns”. The name “Regular Expression” does not say much. However, regular expressions are all about text.\nRegular expression patterns consist of a combination of alphanumeric characters as well as special characters. A regex pattern can be as simple as a single character, or it can be formed by several characters with a more complex structure. In all cases we construct regular expressions much in the same form in which we construct arithmetic expressions, by using various operators to combine smaller expressions."
  },
  {
    "objectID": "units/unit8.html#reading",
    "href": "units/unit8.html#reading",
    "title": "Unit 8: Regular Expressions",
    "section": "📚 Reading",
    "text": "📚 Reading\nRead chapters 13 and 14 of “R Coding Basics”:\n\nLiteral Characters\nMetacharacters\nCharacter Sets\nAnchors\nQuantifiers"
  },
  {
    "objectID": "units/unit8.html#lab",
    "href": "units/unit8.html#lab",
    "title": "Unit 8: Regular Expressions",
    "section": "🔬 Lab",
    "text": "🔬 Lab\nThis week you’ll learn how to perform regex operations."
  },
  {
    "objectID": "units/unit8.html#objectives",
    "href": "units/unit8.html#objectives",
    "title": "Unit 8: Regular Expressions",
    "section": "🎯 Objectives",
    "text": "🎯 Objectives\n\nBeing able to describe what a regular expression is\nExplain what a literal character is\nExplain what a metacharacter is\nGive an example of the wildcard metacharacter “.” (dot)\nGive an example of how to escape a metacharacter\nExplain what a character range is\nExplain what a POSIX character class is"
  },
  {
    "objectID": "units/unit8.html#assignments",
    "href": "units/unit8.html#assignments",
    "title": "Unit 8: Regular Expressions",
    "section": "🔔 Assignments",
    "text": "🔔 Assignments\n\nHW6 due this 03/08\nShiny App1 released on 03/09, due 03/22"
  },
  {
    "objectID": "units/unit2.html",
    "href": "units/unit2.html",
    "title": "Unit 2: R Vectors",
    "section": "",
    "text": "This week we describe data types and their implementation as vectors in R (the most fundamental data object in R). As you’ll see, R is—to a large extent—a vector-based language. Pretty much all other data objects are derived from vectors. We’ll focus on important concepts like:\n\nmain data types (“atomic types” in R): logical, integer, real, and character\ncreation of vectors\nimplicit coercion rules: what R does when you combine values of different data types\nvectorization: when R applies calculations or operations to all the elements of a vector (element-wise)\nrecycling: what R does when you perform a calculation with vectors of different length\nsubsetting (aka subscripting, subindexing, indexing): the use of single/double brackets to subset (i.e. subscript, index) elements of a vector"
  },
  {
    "objectID": "units/unit2.html#reading",
    "href": "units/unit2.html#reading",
    "title": "Unit 2: R Vectors",
    "section": "📚 Reading",
    "text": "📚 Reading\nRead the chapters that form Part I of “R Coding Basics”:\n\nhttps://www.gastonsanchez.com/R-coding-basics/1-01-vectors-intro.html\nhttps://www.gastonsanchez.com/R-coding-basics/1-02-vectors-properties.html\nhttps://www.gastonsanchez.com/R-coding-basics/1-03-vectors-creation.html\nhttps://www.gastonsanchez.com/R-coding-basics/1-04-vectors-concepts.html"
  },
  {
    "objectID": "units/unit2.html#lab",
    "href": "units/unit2.html#lab",
    "title": "Unit 2: R Vectors",
    "section": "🔬 Lab",
    "text": "🔬 Lab\nYou’ll practice creating and manipulating vectors in R, and learning about the concepts described above."
  },
  {
    "objectID": "units/unit2.html#objectives",
    "href": "units/unit2.html#objectives",
    "title": "Unit 2: R Vectors",
    "section": "🎯 Objectives",
    "text": "🎯 Objectives\nAt the end of this week you will be able to:\n\nDescribe the four common data types in R, and give examples for them\nExplain why R vectors are said to be atomic objects\nDescribe and give an example of the implicit coercion rules\nDescribe and give an example of vectorized code\nDescribe and give an example of the recycling rule\nDescribe and give an example of subsetting (indexing) vectors"
  },
  {
    "objectID": "units/unit2.html#shiny-friday",
    "href": "units/unit2.html#shiny-friday",
    "title": "Unit 2: R Vectors",
    "section": "🔆 Shiny Friday",
    "text": "🔆 Shiny Friday\nShiny is an open source R package (developed by Posit) that lets you build web applications using R (and RStudio). BTW: If you’ve never seen a shiny app, you can find dozens of examples in a gallery curated by Posit: https://shiny.posit.co/r/gallery/\nEvery Friday lecture (starting on Jan-26) I will use a shiny example, describing various aspects about its structure, and reviewing some of its key details. Every week we’ll go over a different shiny app, increasing the level of complexity, but also making it more interactive and richer.\nOur first shiny app involves the app that comes by default in RStudio called Old Faithful. This app is based on the famous geyser Old Faithful located in Yellowstone National Park. In particular, the app uses R’s built-in data set \"faithful\" which contains two variables:\n\neruptions: is the time (in min) of an eruption\nwaiting: is the waiting time (in min) to next eruption\n\nThe app is a very basic app that displays a histogram of the “waiting times”.\nhttps://github.com/data133/shiny/tree/main/old-faithful1-default"
  },
  {
    "objectID": "units/unit2.html#activities",
    "href": "units/unit2.html#activities",
    "title": "Unit 2: R Vectors",
    "section": "🔔 Activities",
    "text": "🔔 Activities\nHW1 instructions will be released at the end of this week (due 02/02)."
  },
  {
    "objectID": "units/unit3.html",
    "href": "units/unit3.html",
    "title": "Unit 3: Lists and Matrices",
    "section": "",
    "text": "This week in class we discuss R lists, which are the most generic kind of data container in R. You will learn:\n\nin what sense a list is a non-atomic atomic\nin what sense a list is a one-dimensional object\nhow to create lists\npractice manipulating lists"
  },
  {
    "objectID": "units/unit3.html#reading",
    "href": "units/unit3.html#reading",
    "title": "Unit 3: Lists and Matrices",
    "section": "📚 Reading",
    "text": "📚 Reading\nRead chapters 6, 7 and 8 of “R Coding Basics”:\n\nhttps://www.gastonsanchez.com/R-coding-basics/3-01-matrices-intro.html\nhttps://www.gastonsanchez.com/R-coding-basics/3-02-matrices-operations.html\nhttps://www.gastonsanchez.com/R-coding-basics/4-01-lists.html"
  },
  {
    "objectID": "units/unit3.html#lab",
    "href": "units/unit3.html#lab",
    "title": "Unit 3: Lists and Matrices",
    "section": "🔬 Lab",
    "text": "🔬 Lab\nIn addition to lists, in lab you will also learn about matrices in R. You will work creating and manipulating more atomic objects such as matrices, and also non-atomic lists."
  },
  {
    "objectID": "units/unit3.html#objectives",
    "href": "units/unit3.html#objectives",
    "title": "Unit 3: Lists and Matrices",
    "section": "🎯 Objectives",
    "text": "🎯 Objectives\n\nCreate simple matrices with matrix()\nDescribe and give examples of matrix subsetting (subscripting, indexing)\nExplain in what sense a matrix is a 2-dimensional object\nDescribe and give examples of subsetting (subscripting, indexing) of an R list\nProvide an example of list subsetting with single brackets (e.g. lis[index])\nProvide an example of list subsetting with double brackets, and a single element (e.g. lis[[index]])\nProvide a manipulation example of a list with the dollar operator (e.g. lis$wagon )"
  },
  {
    "objectID": "units/unit3.html#shiny-friday",
    "href": "units/unit3.html#shiny-friday",
    "title": "Unit 3: Lists and Matrices",
    "section": "🔆 Shiny Friday",
    "text": "🔆 Shiny Friday\nThe shiny app of this week is based on the computation of Future Value (compounding interest) in its simplest version:\n\\[\nFV = P (1 + r)^n\n\\]\nThis is a simple app that takes three inputs:\n\nP = principal or initial amount (how much you deposit)\nr = annual interest rate (or rate of return)\nn = number of years\n\nIn turn, the app produces one (graphical) output which is a timeline to visualize the Future Value.\nThere are two versions of the app: one uses three sliders (one slider per input), and the other one uses three numeric inputs (one number per input)\n\nhttps://github.com/data133/shiny/tree/main/future-value1-numerics\nhttps://github.com/data133/shiny/tree/main/future-value2-sliders"
  },
  {
    "objectID": "units/unit3.html#hw-assignments",
    "href": "units/unit3.html#hw-assignments",
    "title": "Unit 3: Lists and Matrices",
    "section": "🔔 HW Assignments",
    "text": "🔔 HW Assignments\n\nHW1 due this 02/02\nHW2 released on 02/03, due 02/09"
  },
  {
    "objectID": "units/unit1.html",
    "href": "units/unit1.html",
    "title": "Unit 1: Intro",
    "section": "",
    "text": "Welcome to Stat 133. Our first meeting is on Wednesday Jan-17 where we begin with the usual review of the course policies, logistics, overall expectations, topics in a nutshell, etc. As for Friday Jan-19, we review some housekeeping aspects of R and RStudio to get you up and running for the following week."
  },
  {
    "objectID": "units/unit1.html#lab",
    "href": "units/unit1.html#lab",
    "title": "Unit 1: Intro",
    "section": "🔬 Lab",
    "text": "🔬 Lab\nGetting started with R and RStudio: first, we want to make sure everybody has installed both programs; and then we will provide an introductory review of RStudio’s workspace, as well as a brief intro to Quarto notebooks. BTW: there’s nothing to submit this week."
  },
  {
    "objectID": "units/unit1.html#activities",
    "href": "units/unit1.html#activities",
    "title": "Unit 1: Intro",
    "section": "🔔 Activities",
    "text": "🔔 Activities\nIf you haven’t yet, please spend some time outside class to review the following documentation:\n\nsyllabus\ncommunication via email\nsome frequently asked questions\nfive things you need to know to pass this class\nintroduction survey (google form)"
  },
  {
    "objectID": "units/unit1.html#install-r-rstudio",
    "href": "units/unit1.html#install-r-rstudio",
    "title": "Unit 1: Intro",
    "section": "📢 Install R & RStudio",
    "text": "📢 Install R & RStudio\nFor those of you that don’t have either R or RStudio, download and install these programs (both are free, and they are available for Mac, Windows, and Linux computers)\n\nInstall R\nInstall RStudio (Desktop free version)"
  },
  {
    "objectID": "units/unit4.html",
    "href": "units/unit4.html",
    "title": "Unit 4: Functions and Conditionals",
    "section": "",
    "text": "You don’t need to be an expert programmer to be a data scientist, but learning more about programming allows you to automate common tasks, and solve new problems with greater ease.\nThis week we’ll discuss how to write basic functions, the notion of compound expressions in R, and an introduction to conditionals (i.e. if-else statements)."
  },
  {
    "objectID": "units/unit4.html#reading",
    "href": "units/unit4.html#reading",
    "title": "Unit 4: Functions and Conditionals",
    "section": "📚 Reading",
    "text": "📚 Reading\nRead chapters 10, 11, and 12 of “R Coding Basics”:\n\nhttps://www.gastonsanchez.com/R-coding-basics/5-01-functions-intro.html\nhttps://www.gastonsanchez.com/R-coding-basics/5-02-expressions.html\nhttps://www.gastonsanchez.com/R-coding-basics/5-03-conditionals.html"
  },
  {
    "objectID": "units/unit4.html#lab",
    "href": "units/unit4.html#lab",
    "title": "Unit 4: Functions and Conditionals",
    "section": "🔬 Lab",
    "text": "🔬 Lab\nYou will get your hands “dirty” writing basic functions, and conditional statements."
  },
  {
    "objectID": "units/unit4.html#objectives",
    "href": "units/unit4.html#objectives",
    "title": "Unit 4: Functions and Conditionals",
    "section": "🎯 Objectives",
    "text": "🎯 Objectives\nAt the end of this week you will be able to:\n\nDescribe the main parts of a function (i.e. anatomy of a function)\nGive a simple example for creating a function\nExplain the concept of an R compound expression\nWrite if-else statements to handle simple conditions\nUse if-else statements when writing functions to decide what code to execute"
  },
  {
    "objectID": "units/unit4.html#shiny-friday",
    "href": "units/unit4.html#shiny-friday",
    "title": "Unit 4: Functions and Conditionals",
    "section": "🔆 Shiny Friday",
    "text": "🔆 Shiny Friday\nThe shiny app for this week is a modified version of the default “Old Faithful” app.\nThe main modification has to do with the use of an if-statement to decide whether to display additional statistics on the histogram of waiting times.\nMore specifically, we have three new versions:\n\nold-faithful3-average-radio: includes radio buttons to display line of average waiting time  https://github.com/data133/shiny/tree/main/old-faithful3-average-radio\nold-faithful4-average-checkbox: includes a checkbox to display line of average waiting time  https://github.com/data133/shiny/tree/main/old-faithful4-average-checkbox\nold-faithful5-statistics: includes an auxiliary function to compute descriptive statistics, and also a checkbox to display descriptive statistics  https://github.com/data133/shiny/tree/main/old-faithful5-statistics"
  },
  {
    "objectID": "units/unit4.html#assignments",
    "href": "units/unit4.html#assignments",
    "title": "Unit 4: Functions and Conditionals",
    "section": "🔔 Assignments",
    "text": "🔔 Assignments\n\nHW2 due this 02/09\nHW3 released on 02/10, due 02/16"
  },
  {
    "objectID": "units/unit5.html",
    "href": "units/unit5.html",
    "title": "Unit 5: Tables and Tidyverse-1",
    "section": "",
    "text": "One of the main parts of the course involves working with tabular data, which is the most ubiquitous format in which data is handled. And even if the raw data is not in tabular format, sooner or later, you’ll be dealing with data in tabular format in most Data Analysis Projects. Interestingly, there is a set of tools in R formally known as Tidyverse which provides a large ecosystem of packages especially designed to work with tabular data.\nThe dedicated data object that R provides to handle tabular data is a data.frame. We will discuss some important details about data frames, and how to manipulate them from a “classic” approach in R (in contrast to the more modern approach via the tidyverse package “dplyr”, to be discussed next week).\nWe are also going to get our feet wet making graphics with the Tidyverse package \"ggplot2\". In particular you’ll learn about the Grammar of Graphics and its central idea: a graphic involves mapping data to geometric objects and their visual attributes. This is the underlying framework behind the mechanics and core functions available in “ggplot2” for creating simple graphics:\n\nBegin your graphic specification with ggplot()\nIndicate where the data comes from\nEstablish which variables are going to be mapped into visual attributes: aes()\nDecide what kind of geometric object(s) will be used to display data; e.g. geom_point()\nOptional: do you need to use facets?\nOptional: do you need to explicitly use one or more statistical transformations?\nOptional: do you need to explicitly set a non-default system of coordinates?\nOptional: do you need to explicitly use a non-default theme of graphical elements?"
  },
  {
    "objectID": "units/unit5.html#reading",
    "href": "units/unit5.html#reading",
    "title": "Unit 5: Tables and Tidyverse-1",
    "section": "📚 Reading",
    "text": "📚 Reading\nRead chapter 9 of “R Coding Basics”:\n\nhttps://www.gastonsanchez.com/R-coding-basics/4-02-data-frames.html\n\nRead chapters 2 and 4 of “R Tidy Hurricanes”:\n\nhttps://www.gastonsanchez.com/R-tidy-hurricanes/1-02-about-hurricanes.html\nhttps://www.gastonsanchez.com/R-tidy-hurricanes/2-01-intro-ggplot.html"
  },
  {
    "objectID": "units/unit5.html#lab",
    "href": "units/unit5.html#lab",
    "title": "Unit 5: Tables and Tidyverse-1",
    "section": "🔬 Lab",
    "text": "🔬 Lab\nYou will get introduced to the ggplot2 system for making graphics when data is in tabular format."
  },
  {
    "objectID": "units/unit5.html#objectives",
    "href": "units/unit5.html#objectives",
    "title": "Unit 5: Tables and Tidyverse-1",
    "section": "🎯 Objectives",
    "text": "🎯 Objectives\nAt the end of this week you will be able to:\n\nExplain how can you manipulate a data frame as a 2-dimensional object\nExplain how to use the dollar $ operator with a data frame\nProvide a simple example for creating a data frame\nGet a first contact with \"ggplot2\"\nDescribe the purpose of the aesthetic mapping function aes()\nDescribe the notion of “layers” and how to use them for making a graphic using “ggplot2”"
  },
  {
    "objectID": "units/unit5.html#shiny-friday",
    "href": "units/unit5.html#shiny-friday",
    "title": "Unit 5: Tables and Tidyverse-1",
    "section": "🔆 Shiny Friday",
    "text": "🔆 Shiny Friday\nThe shiny app for this week involves data from NBA players, visualizing some univariate plots with ggplot2.\nWe have two versions:\n\nnba-histograms1-basic: histograms of NBA players’ data, includes a select input to choose the variable to visualize, and a slider input to determine the number of bins in the histogram.  https://github.com/data133/shiny/tree/main/nba-histograms1-basic\nnba-histograms2-facets: same as app1 but this one also includes another select input to decide whether the histograms should be split into facets by either team or player’s position.  https://github.com/data133/shiny/tree/main/nba-histograms2-facets"
  },
  {
    "objectID": "units/unit5.html#assignments",
    "href": "units/unit5.html#assignments",
    "title": "Unit 5: Tables and Tidyverse-1",
    "section": "🔔 Assignments",
    "text": "🔔 Assignments\n\nHW3 due this 02/16\nHW4 released on 02/17, due 02/23"
  },
  {
    "objectID": "units/unit7.html",
    "href": "units/unit7.html",
    "title": "Unit 7: Functions and Conditionals",
    "section": "",
    "text": "In addition to writing functions to reduce duplication in your code, you also need to learn about iteration, which helps you when you need to do the same operation several times. Namely, we review control flow structures such as for loops, while loops, repeat loops, and the apply family functions."
  },
  {
    "objectID": "units/unit7.html#reading",
    "href": "units/unit7.html#reading",
    "title": "Unit 7: Functions and Conditionals",
    "section": "📚 Reading",
    "text": "📚 Reading\nRead chapters 13 and 14 of “R Coding Basics”:\n\nhttps://www.gastonsanchez.com/R-coding-basics/5-04-for-loop.html\nhttps://www.gastonsanchez.com/R-coding-basics/5-05-while-loop.html"
  },
  {
    "objectID": "units/unit7.html#lab",
    "href": "units/unit7.html#lab",
    "title": "Unit 7: Functions and Conditionals",
    "section": "🔬 Lab",
    "text": "🔬 Lab\nYou’ll keep working writing a variety of loops in R (e.g. for, while, repeat)."
  },
  {
    "objectID": "units/unit7.html#objectives",
    "href": "units/unit7.html#objectives",
    "title": "Unit 7: Functions and Conditionals",
    "section": "🎯 Objectives",
    "text": "🎯 Objectives\nAt the end of this week you will be able to:\n\nWrite for loops to repeat the same operation a given number of times\nWrite while loops to repeat the same operation an unknown number of times"
  },
  {
    "objectID": "units/unit7.html#shiny-friday",
    "href": "units/unit7.html#shiny-friday",
    "title": "Unit 7: Functions and Conditionals",
    "section": "🔆 Shiny Friday",
    "text": "🔆 Shiny Friday\nThe shiny app for this week involves a simple Future Value calculator with some simulations. To be more precise, the app simulates investing annual constant contributions, for a number of years. The rate of return for every year is a variable rate that is randomly generated according to a normal distribution.\nAn important component of this app is the use of the reactive() function to create so-called reactive conductors (i.e. an R expression that uses widget input(s) and returns a value).\nAnother interesting part of this app is that its UI layout is based on the package bslib, which allows us to create customizable shiny dashboards.\n\napp: timeline of simulated future values  https://github.com/data133/shiny/blob/main/future-value4-dashboard/app.R\n\nIn the event that bslib functions don’t work for you, here’s another app that also simulates a different, yet basic, investing scenario:\n\nhttps://github.com/data133/shiny/blob/main/future-value3-simulations/app.R"
  },
  {
    "objectID": "units/unit7.html#assignments",
    "href": "units/unit7.html#assignments",
    "title": "Unit 7: Functions and Conditionals",
    "section": "🔔 Assignments",
    "text": "🔔 Assignments\n\nHW5 due this 03/01\nHW6 released on 03/02, due 03/08"
  },
  {
    "objectID": "units/unit6.html",
    "href": "units/unit6.html",
    "title": "Unit 6: Tables and Tidyverse-2",
    "section": "",
    "text": "This week we continue with another fundamental tidyverse package \"dplyr\". Simply put, dplyr comes with functions that allow you to manipulate data-tables (e.g. data-frames, and other 2-dimensional objects) using a modern and syntactic way."
  },
  {
    "objectID": "units/unit6.html#reading",
    "href": "units/unit6.html#reading",
    "title": "Unit 6: Tables and Tidyverse-2",
    "section": "📚 Reading",
    "text": "📚 Reading\nRead chapters 5 to 10 of “R Tidy Hurricanes”:\n\nhttps://www.gastonsanchez.com/R-tidy-hurricanes/2-02-intro-dplyr.html\nhttps://www.gastonsanchez.com/R-tidy-hurricanes/2-03-intro-pipes.html\nhttps://www.gastonsanchez.com/R-tidy-hurricanes/3-01-storms-year.html\nhttps://www.gastonsanchez.com/R-tidy-hurricanes/3-02-storms-1975.html\nhttps://www.gastonsanchez.com/R-tidy-hurricanes/3-03-amy-1975.html\nhttps://www.gastonsanchez.com/R-tidy-hurricanes/3-04-summary-1975.html"
  },
  {
    "objectID": "units/unit6.html#lab",
    "href": "units/unit6.html#lab",
    "title": "Unit 6: Tables and Tidyverse-2",
    "section": "🔬 Lab",
    "text": "🔬 Lab\nYou will get to practice common manipulation operations of data-tables using a modern and syntactic way following the data plying framework provided by the R package dplyr.\nAlso, we are going to review various aspects that have to do with reading in (i.e. importing) tables in R."
  },
  {
    "objectID": "units/unit6.html#objectives",
    "href": "units/unit6.html#objectives",
    "title": "Unit 6: Tables and Tidyverse-2",
    "section": "🎯 Objectives",
    "text": "🎯 Objectives\nPerform basic manipulations on data tables with “dplyr” functions:\n\nSelect rows with slice(), and filter()\nSelect columns with select()\nTransform columns with mutate()\nArrange rows with arrange()\nGroup data with group_by()\nSummarize data with summarize()"
  },
  {
    "objectID": "units/unit6.html#shiny-friday",
    "href": "units/unit6.html#shiny-friday",
    "title": "Unit 6: Tables and Tidyverse-2",
    "section": "🔆 Shiny Friday",
    "text": "🔆 Shiny Friday\nThe shiny app for this week, like in the previous week, involves data from NBA players. This time, the goal is to visualize scatter plots with ggplot2.\nWe have three versions:\n\nnba-scatterplots1-basic: produces a simple scatterplot based on two select inputs, one to select the variable of the x-axis, the other one to select the variable of the y-axis.  https://github.com/data133/shiny/tree/main/nba-scatterplots1-basic\nnba-scatterplots2-ggplotly: same as app1 but this takes the ggplot object and makes it into a plotly object.  https://github.com/data133/shiny/tree/main/nba-scatterplots2-ggplotly\nnba-scatterplots3-smoother1: same as app1, plus radio buttons to decide whether to add a smoother.  https://github.com/data133/shiny/tree/main/nba-scatterplots3-smoother1"
  },
  {
    "objectID": "units/unit6.html#assignments",
    "href": "units/unit6.html#assignments",
    "title": "Unit 6: Tables and Tidyverse-2",
    "section": "🔔 Assignments",
    "text": "🔔 Assignments\n\nHW4 due this 02/23\nHW5 released on 02/24, due 03/01"
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "This is an introductory-to-intermediate level course to computational data analysis with an emphasis on four major cornerstones:\n\n🔢 understand common data formats, and principles of data manipulation (e.g. wrangling, reshaping, tidying)\n📊 production of data visualizations and their role in data analysis projects\n💻 learn basic principles for writing code, and programming concepts (with emphasis on data analysis)\n⚒️ use computational tools to carry out the data analysis cycle, organize your workflow, and become familiar with reporting tools (via dynamic documents and web-apps)\n\nBecause Stat 133 is one of the core courses for Statistics majors, the underlying goal is to provide foundations for “computing with data” so that stat majors, as well as other data-dependent majors (e.g. Data Science, Applied Math, CogSci, Economics, etc), have the basic computational skills for subsequent upper division courses (e.g. Stat 150, 151A, 152, 153, 154, 155, 157, 158, 159)."
  },
  {
    "objectID": "syllabus.html#goals",
    "href": "syllabus.html#goals",
    "title": "Syllabus",
    "section": "🎯 Goals",
    "text": "🎯 Goals\nBy the end of the course, students will:\n\nConstruct and execute basic programs in R using elementary programming techniques and tidyverse packages\nVisualize information and data using appropriate graphical techniques\nImport data from files or the internet\nMunge raw data into a tidy format\nCreate visualizations using geospatial data\nParse and analyze text documents\nCreate reproducible documents\nConstruct interactive web applications\n\nWe don’t expect that you become a jedi data scientist, an R ninja, or a super coder. That takes YEARS of practice, training, learning, and collaboration. Instead, we want to give you a good foundation around tools for computational data analysis."
  },
  {
    "objectID": "syllabus.html#ℹ-prerequisites",
    "href": "syllabus.html#ℹ-prerequisites",
    "title": "Syllabus",
    "section": "ℹ️ Prerequisites",
    "text": "ℹ️ Prerequisites\nThis course does not have any prerequisites, although it would be nice if you have taken an introductory course in statistics (e.g. Stat 2, 20, 21, 131A).\nThe curriculum and format is designed specifically for students (ideally majoring in Statistics and/or Data Science) who have no-or-minimum programming experience. You also don’t need previous data analysis experience—although it helps if you do.\nStudents with some prior experience in either computational statistics or computing are welcome to enroll, though some parts of the course might feel extremely slow. We recommend that you take more advanced courses unless you need Stat 133 because of your major/minor’s requirements."
  },
  {
    "objectID": "syllabus.html#textbooks",
    "href": "syllabus.html#textbooks",
    "title": "Syllabus",
    "section": "📚 Textbooks",
    "text": "📚 Textbooks\nWe’ll be using a handful of textbooks (most of them based on the notes I’ve used in Stat 133 for the last 8 years):\n\nhttps://www.gastonsanchez.com/R-coding-basics/\nhttps://www.gastonsanchez.com/R-tidy-hurricanes/\nhttps://www.gastonsanchez.com/R-rolling-dice/\nhttps://www.gastonsanchez.com/R-for-strings/\nhttps://www.gastonsanchez.com/R-web-technologies/\nhttps://www.tidytextmining.com/ (by Julia Silge and David Robinson)"
  },
  {
    "objectID": "syllabus.html#computational-tools",
    "href": "syllabus.html#computational-tools",
    "title": "Syllabus",
    "section": "🔧 Computational Tools",
    "text": "🔧 Computational Tools\nWe will be mainly using the computing and programming environment R (via RStudio to analyze data in this class. You will also use a command line interface to interact with your operating system. You do need your own computer to use R and do the assignments.\nWe don’t expect that students have already been exposed to R. For those who come from Data 8 or some previous coding experience in python, the first labs will help you transfer that knowledge over to R. Both languages are excellent platforms for analyzing data, are widely used in data science, and have their individual strengths. R has been developed within the statistics community specifically for data analysis, while python is a general-purpose programming language but has large data analysis capabilities.\nThe lectures tend to be focused on the data analysis concepts, while learning how to apply/use them in R tend to be the focus of the labs and assignments. Do not be surprised or worried about not following the details of R code during class—that is not the point (furthermore, there will sometimes be code that is really specific to the instructional purposes of the lecture, e.g. to make a specific plot, and is beyond the scope of what you would be expected to understand or know how to do it by yourself)."
  },
  {
    "objectID": "syllabus.html#waitlisted-students-and-late-joining",
    "href": "syllabus.html#waitlisted-students-and-late-joining",
    "title": "Syllabus",
    "section": "⏳ Waitlisted Students and Late Joining",
    "text": "⏳ Waitlisted Students and Late Joining\nIf you are on the waiting list, you must still do all coursework and complete labs and homework by the deadlines. We will not be offering extensions if you are admitted into the course later. So it is your responsibility to stay up to date on the assignments.\nUnfortunately, doing all the work is not a guarantee of enrollment. You will only be enrolled if there is space in your lab. Enrollment will proceed by CalCentral."
  },
  {
    "objectID": "syllabus.html#labs-8-of-final-grade",
    "href": "syllabus.html#labs-8-of-final-grade",
    "title": "Syllabus",
    "section": "🔬 Labs (8% of final grade)",
    "text": "🔬 Labs (8% of final grade)\n\nWeekly labs are an essential part of the course and we will introduce concepts not necessarily covered in lecture.\nThursdays are the official days for lab section.\nYou must attend the lab section you are officially enrolled in.\nPractice problems (and their solutions) will be released every week, typically on a Thursday.\nAs its name indicates, they are there to give you the opportunity to practice the concepts covered every week.\nEvery week there will be a lab checkpoint; which may involve submitting a source file, and its generated HTML document; or it may involve answering a google form, or signing an attendance sheet, etc.\nOf all lab checkpoints, your lowest 2 scores will be dropped in the calculation of your overall grade."
  },
  {
    "objectID": "syllabus.html#problem-sets-35-of-final-grade",
    "href": "syllabus.html#problem-sets-35-of-final-grade",
    "title": "Syllabus",
    "section": "📁 Problem Sets (35% of final grade)",
    "text": "📁 Problem Sets (35% of final grade)\n\nThere will be about 6 Problem-Set assignments.\nStarting on week-2 they will be assigned every week, until week-7.\nThe due date is always on a Friday (please check the assignments tab to keep track of deadlines).\nYou must write your own answers (using your own words and/or code). Copy and plagiarism will not be tolerated (see Academic Honesty policy).\nIf you don’t submit all required files, you will receive an automatic 10% deduction.\nIf you submit the incorrect files, you will receive no credit.\nSolutions will become available a few days (e.g. 3-4 days) after the due date.\nWe will drop the lowest Problem-Set assignment score in the calculation of your overall grade."
  },
  {
    "objectID": "syllabus.html#app-projects-27-of-final-grade",
    "href": "syllabus.html#app-projects-27-of-final-grade",
    "title": "Syllabus",
    "section": "📂 App Projects (27% of final grade)",
    "text": "📂 App Projects (27% of final grade)\n\nThere will be about 3 Shiny App projects.\nThese are larger assignments intended to combine many of the ideas from the course, in order to create interactive web-apps.\nAs part of the submission you will have to record a video (with screen and face capture) in which you describe how to use your app, and explain the performed analysis and some of the obtained results.\nStarting on week-8 app projects will be assigned about every two weeks, until the end of instruction.\nWe will not drop any of the App assignment scores in the calculation of your overall grade."
  },
  {
    "objectID": "syllabus.html#late-policy-and-assignment-extensions",
    "href": "syllabus.html#late-policy-and-assignment-extensions",
    "title": "Syllabus",
    "section": "🕚 Late Policy and Assignment Extensions",
    "text": "🕚 Late Policy and Assignment Extensions\nIf you cannot turn in an assignment on time, our default policy is:\n\nSubmissions within 24 hours after the deadline will receive a 15% deduction.\nSubmissions within 48 hours after the deadline will receive a 30% deduction.\nSubmissions that are 48 hours or more after the deadline will receive no credit.\n\nRequesting an extension: If you need to request an extension, regardless of your DSP status, fill out this google form. Submissions to this form will be visible only to the course staff members.\n\nAny first-time request for a 1-day extension on a problem set assignment, made before an assignment’s deadline, will be guaranteed to be approved, so long as it is made in good faith.\nAny first-time request for a 1-day extension on a shiny app assignment, made before an assignment’s deadline, will be guaranteed to be approved, so long as it is made in good faith.\nAny occasional request for a 2-day extension (requested before an assignment’s deadline) made by a student with a DSP accommodation for assignment extensions will be approved automatically.\n\nAlso, please keep in mind that we are dropping the lowest score of your six Problem-set assignments (do not confuse with App projects). This policy is in place to take care of any extenuating circumstances that prevent you from submitting one of these assignments.\nPlease plan ahead and pace yourself. Don’t wait until the last day to do an assignment. Don’t wait until the last minute to submit your assignments."
  },
  {
    "objectID": "syllabus.html#midterm-8-of-final-grade",
    "href": "syllabus.html#midterm-8-of-final-grade",
    "title": "Syllabus",
    "section": "📝 Midterm (8% of final grade)",
    "text": "📝 Midterm (8% of final grade)\n\nThere will be one midterm assigned on Friday Mar-15th.\nMore information about the midterm will be announced as we approach its due date.\nUnless you have approved accommodations, we won’t be able to provide any extensions if you miss the midterm."
  },
  {
    "objectID": "syllabus.html#final-exam-22-of-final-grade",
    "href": "syllabus.html#final-exam-22-of-final-grade",
    "title": "Syllabus",
    "section": "📝 Final Exam (22% of final grade)",
    "text": "📝 Final Exam (22% of final grade)\n\nThere will be one final exam.\nThe final exam will be held on Monday May-6th, 7pm-10pm, as scheduled by the University.\nMore information about the final exam will be provided as we approach its due date.\nUnless you have accommodations as determined by the university and approved by the instructor, you must take the exam at the date and times provided here.\nPlease check your course schedule and make sure that you can take the final exam on May-6th, 7pm-10pm. Otherwise, do not take the class if you are not available at this date."
  },
  {
    "objectID": "syllabus.html#grading-structure",
    "href": "syllabus.html#grading-structure",
    "title": "Syllabus",
    "section": "💯 Grading Structure",
    "text": "💯 Grading Structure\nGrades will be assigned using the following weighted components:\n\n8% Lab (drop 2 lowest scores)\n35% Psets (drop lowest score)\n8% App1 (no drop)\n9% App2 (no drop)\n10% App3 (no drop)\n8% Midterm\n22% Final Exam\n\n\nTo complete the course, you must take the final exam.\nTo try to keep grading consistent across semesters, I may occasionally curve an individual assignment. I will do this only if I made the assignment or exam harder than I intended, and no one’s scores will decrease as a result of the curve. This will happen very rarely, probably not at all.\nTo give you a rough idea of the grading scheme, the assignment of letter grades in previous semesters has been as follows (exact cutoff points may vary a little bit every semester based on the overall scores distribution):\n\n😀 90-100% (Excellent) A-/A/A+ range\n🙂 80-90% (Good) B-/B/B+ range\n😐 70-80% (Fair) C-/C/C+ range\n🙁 60-70% (Deficient) D\n😞 Below 60% (Failed) F\n\nIf you are taking the class pass-fail, the cut-oﬀ for passing is 70% (C-).\nAs a matter of course policy, I do not round up when calculating letter grades. Ex: if your overall score is 79.9999%, then the highest letter grade that you can expect is a C+, not a B-.\nThere is no curve; your grade will depend only on how well you do, and not on how well everyone else does.\nLetter grades are final; I don’t enter into negotiations with students about grades.\nPlease do not engage in grade grubbing.\nAlso, please remember that we grade your course performance, not your personal worth."
  },
  {
    "objectID": "syllabus.html#generative-a.i.-policy",
    "href": "syllabus.html#generative-a.i.-policy",
    "title": "Syllabus",
    "section": "⚠️ Generative A.I. Policy",
    "text": "⚠️ Generative A.I. Policy\nGenerative A.I. refers to artificial intelligence technologies, like those used for ChatGPT and similar, that can draw on a large corpus of training data to create new written, visual, or audio content.\nThere are two principles we use to guide our class policy on AI use:\n\nCognitive dimension: Working with AI should not reduce your ability to think clearly. The use of AI should facilitate—rather than hinder—learning.\nEthical dimension: Students using AI should be transparent about their use and make sure it aligns with academic integrity.\n\nIn this course, we’ll be developing skills that are important to practice on your own. Because use of generative A.I. may inhibit the development of those skills, the use of this tools is permitted in this course for the following activities:\n\nBrainstorming and refining your ideas;\nFine tuning your exploratory/research questions;\nDrafting an outline to organize your thoughts;\nChecking syntax errors or bugs in your code; and\nPolishing your spelling and grammar.\n\nThe use of generative A.I. tools is not permitted in this course for the following activities:\n\nImpersonating you in classroom contexts, such as by using the tool to compose discussion board prompts assigned to you or content that you put into a discussion forum/chat.\nAttempting to pass off AI-generated work as your own.\nWriting a draft of your assignment.\nWriting entire blocks of code, functions, or scripts to complete class assignments.\n\nPlease keep in mind that use of generative A.I. tools can impede your learning by generating ideas for you before you had a chance to think of your own ideas; inhibiting the development of your own writing skills; generating factually inaccurate statements or fictional reference sources; etc.\nIf you are unsure of whether and how much of a submission has been AI-generated, or whether you are in violation of a certain policy, please reach out to us and ask for guidance."
  },
  {
    "objectID": "syllabus.html#academic-honesty",
    "href": "syllabus.html#academic-honesty",
    "title": "Syllabus",
    "section": "☝️ Academic Honesty",
    "text": "☝️ Academic Honesty\nYou should not share your code or answers, directly or indirectly, with other students. Doing so doesn’t help them; it just sets them up for trouble on exams. Feel free to discuss the problems with others beforehand, but not the solutions. Please complete your own work and keep it to yourself (e.g. avoid sharing it in hosting platforms like Github or similar). If you suspect other people may be plagiarizing you, let us know ASAP.\nWe expect you to do your own work and to uphold the standards of intellectual integrity. Collaborating on homework is fine and we encourage you to work together—but copying is not, nor is having somebody else submit assignments for you. Likewise, obtaining and/or using solutions from previous years or from the internet, if such happen to be available, is considered cheating.\nBeyond the templates or starting code provided by the teaching staff, any writing, code, media, or other submissions not explicitly identified as AI-generated will be assumed as original to the student. Submitting AI-generated work without identifying it as such will be considered a violation of the Code of Student Conduct.\nCheating will not be tolerated. Any evidence of academic misconduct will result in a score of zero (0) on the entire assignment or examination, and a failing letter grade. We will always report incidences of cheating to the Center for the Student Conduct.\nIf you are having trouble with an assignment or studying for an exam, or if you are uncertain about permissible and impermissible conduct or collaboration, please contact us.\nRather than copying someone else’s work, ask for help. You are not alone in this course! The course staff is here to help you succeed. If you invest the time to learn the material and complete the projects, you won’t need to copy any answers."
  },
  {
    "objectID": "syllabus.html#email-policy",
    "href": "syllabus.html#email-policy",
    "title": "Syllabus",
    "section": "✉️ Email Policy",
    "text": "✉️ Email Policy\nIf you wish for your email to make it into our inbox, the subject of your email must contain the text: Stat 133.\nPlease refer to my email guidelines for more information: communication via email"
  },
  {
    "objectID": "syllabus.html#special-accommodations",
    "href": "syllabus.html#special-accommodations",
    "title": "Syllabus",
    "section": "🚸 Special Accommodations",
    "text": "🚸 Special Accommodations\nStudents needing accommodations for any physical, psychological, or learning disability, should contact the teaching staff during the first two weeks of the semester, and see http://dsp.berkeley.edu to learn about Berkeley’s policy. If you are a DSP student, please contact us at least three weeks prior to a midterm or final so that we can work out acceptable accommodations.\nFor relevant DSP accommodations that provide occasional extensions on assignments, please see the above Late Policy."
  },
  {
    "objectID": "syllabus.html#incomplete-grade",
    "href": "syllabus.html#incomplete-grade",
    "title": "Syllabus",
    "section": "❗Incomplete Grade",
    "text": "❗Incomplete Grade\nUnder emergency/special circumstances, students may petition me to receive an Incomplete grade. By University policy, for a student to get an Incomplete requires (i) that the student was performing passing-level work until the time that (ii) something happened that—through no fault of the student—prevented the student from completing the coursework. If you take the final, you completed the course, even if you took it while ill, exhausted, mourning, etc. The time to talk to me about incomplete grades is BEFORE you take the final (several weeks before), when the situation that prevents you from finishing the course presents itself. Please clearly state your reasoning in your comments to me.\nIt is your responsibility to develop good time management skills, good studying habits, know your limits, and learn to ask for professional help. Life happens. Social, family, cultural, scholar, and individual circumstances can affect your performance (both positive and negatively). If you find yourself in a situation that raises concerns about passing the course, please contact me as soon as possible.\nAbove all, please do not wait till the end of the semester to share your concerns about passing the course because it will be too late by then."
  },
  {
    "objectID": "syllabus.html#safe-and-inclusive-environment",
    "href": "syllabus.html#safe-and-inclusive-environment",
    "title": "Syllabus",
    "section": "🌻 Safe and Inclusive Environment",
    "text": "🌻 Safe and Inclusive Environment\nWhenever a faculty member, staff member, post-doc, or GSI is responsible for the supervision of a student, a personal relationship between them of a romantic or sexual nature, even if consensual, is against university policy. Any such relationship jeopardizes the integrity of the educational process.\nAlthough faculty and staff can act as excellent resources for students, you should be aware that they are required to report any violations of this campus policy. If you wish to have a confidential discussion on matters related to this policy, you may contact the Confidential Care Advocates on campus for support related to counseling or sensitive issues. Appointments can be made by calling (510) 642-1988.\nThe classroom, lab, and work place should be safe and inclusive environments for everyone. The Office for the Prevention of Harassment and Discrimination (OPHD) is responsible for ensuring the University provides an environment for faculty, staff and students that is free from discrimination and harassment on the basis of categories including race, color, national origin, age, sex, gender, gender identity, and sexual orientation. Questions or concerns? Call (510) 643-7985, email ask_ophd@berkeley.edu, or go to http://survivorsupport.berkeley.edu/."
  },
  {
    "objectID": "syllabus.html#last-but-not-least",
    "href": "syllabus.html#last-but-not-least",
    "title": "Syllabus",
    "section": "🎉 Last But Not Least",
    "text": "🎉 Last But Not Least\nThe main goal of Stat 133 is that you should learn, and have a fantastic experience doing so. Please keep that goal in mind throughout the semester."
  },
  {
    "objectID": "five-things.html",
    "href": "five-things.html",
    "title": "Five things you need to know to pass this class",
    "section": "",
    "text": "Here they are, in no particular order"
  },
  {
    "objectID": "five-things.html#read-instructions-carefully",
    "href": "five-things.html#read-instructions-carefully",
    "title": "Five things you need to know to pass this class",
    "section": "1) Read Instructions Carefully",
    "text": "1) Read Instructions Carefully\nYou must carefully read the instructions provided for each assignment. Read, not skim! They contain information vital for the completion of the assigned work."
  },
  {
    "objectID": "five-things.html#do-all-the-assigned-work",
    "href": "five-things.html#do-all-the-assigned-work",
    "title": "Five things you need to know to pass this class",
    "section": "2) Do all the assigned work",
    "text": "2) Do all the assigned work\nThis course is a very hands-on course and requires many hours of practical work outside class and lab. It also requires reviewing ALL the learning materials shared in this website and in bCourses.\nIt goes without saying that you should do all the assigned work: attend lecture and section, review the practice material discussed in lab, and of course do all HW assignments. Keep in mind that the activities and assignments build upon earlier work. So it’s important not to fall behind and avoid leaving gaps along the semester.\nOn the technical side, you should have your own computer, (good) internet connection, download and install specific software (e.g. R, RStudio, gitbash, zoom), and also know how to record a video of both 1) computer’s screen capture, and 2) face capture (e.g. a zoom recording makes this easy). We will provide more detailed instructions about the required tools as we move forward with the semester."
  },
  {
    "objectID": "five-things.html#no-need-to-memorize-all-commands",
    "href": "five-things.html#no-need-to-memorize-all-commands",
    "title": "Five things you need to know to pass this class",
    "section": "3) No need to memorize all commands",
    "text": "3) No need to memorize all commands\nDo you need to memorize all commands? No! We don’t expect that you memorize all commands. In fact, you can find a series of cheatsheets that you can (and should) use at all times (even during quizzes and tests).\nHowever, we do expect that you learn the most common types of functions in R: e.g. library(), function(), help(), etc. More important, we expect that you understand the “logic” and working principles of certain data objects, common programming structures, good practices, etc."
  },
  {
    "objectID": "five-things.html#study-for-tests",
    "href": "five-things.html#study-for-tests",
    "title": "Five things you need to know to pass this class",
    "section": "4) Study for tests",
    "text": "4) Study for tests\nThe exams are a way to test your understanding of the various concepts presented in the course. The exams are also a way to test whether you are really doing all the practical work by yourself.\nIn theory, students who do an honest effort in completing all the assignments (e.g. writing commands, understanding commands, learning the syntax, etc) should be able to get a passing score in these tests."
  },
  {
    "objectID": "five-things.html#what-else-do-you-recommend-to-succeed-in-this-course",
    "href": "five-things.html#what-else-do-you-recommend-to-succeed-in-this-course",
    "title": "Five things you need to know to pass this class",
    "section": "5) What else do you recommend to succeed in this course?",
    "text": "5) What else do you recommend to succeed in this course?\nThis one is hard to answer, in part because it depends on your personal definition of “success”. Simply put, I don’t think there’s a unique recipe for success. Instead, let me answer this question by telling you about the typical factors that may negatively affect your performance:\n\nnot attending lecture and/or lab,\nnot submitting assignments,\nlooking at the solutions of other students and “inadvertently” copy them,\npoor studying/working habits\nbeing afraid/scared/ashamed of asking the teaching staff for help\nyou’ve been doing work of passing quality and you cannot complete the course due to circumstances beyond your control\n\nDon’t underestimate the second to last item. Coding (in any programming language) can be extremely frustrating at times. You would be surprised to hear my collection of student stories about all sorts of bugs, typos, misspellings, and the like, that gave them a fair amount of frustration. So please, ask the teaching staff for help in a timely and respectful manner.\nAs for the last item, please let us know you’ve been affected by circumstances beyond your control as soon as possible. While we cannot guarantee any outcome, we will do what is within our reach to help you in this class."
  },
  {
    "objectID": "calendar.html",
    "href": "calendar.html",
    "title": "Calendar",
    "section": "",
    "text": "We can just embed the iframe html:"
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "Data",
    "section": "",
    "text": "We’ll use data from several real world situations in class."
  },
  {
    "objectID": "data.html#data-1",
    "href": "data.html#data-1",
    "title": "Data",
    "section": "Data 1",
    "text": "Data 1\nTBD"
  },
  {
    "objectID": "data.html#data-2",
    "href": "data.html#data-2",
    "title": "Data",
    "section": "Data 2",
    "text": "Data 2\nTBD"
  },
  {
    "objectID": "cheatsheets.html",
    "href": "cheatsheets.html",
    "title": "Cheat Sheets",
    "section": "",
    "text": "rstudio-IDE-cheatsheet.pdf\nrmarkdown-cheatsheet.pdf\nbase-r-cheatsheet.pdf\ndplyr-cheatsheet.pdf\nggplot2-cheatsheet-2.1.pdf\ndata-import-cheatsheet.pdf\nlubridate-cheatsheet.pdf\nshiny-cheatsheet.pdf\ncommand-line-cheatsheet.pdf\nstringr-cheatsheet.pdf"
  }
]